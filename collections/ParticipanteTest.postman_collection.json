{
	"info": {
		"_postman_id": "e9498bbf-04d9-4056-a437-190d5f3536df",
		"name": "ParticipanteTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37959609"
	},
	"item": [
		{
			"name": "Crear un participante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"participante_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": \"10000000\",\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería civíl\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/participantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes"
					]
				}
			},
			"response": [
				{
					"name": "Crear un participante",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": \"1000000000\",\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería civíl\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": 1000000000,\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería civíl\"\r\n}"
				}
			]
		},
		{
			"name": "Obtener todos los participantes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of participantes > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/participantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todos los participantes",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"nombre\": \"Andres Lopez\",\r\n        \"foto\": \"http://bit.ly/3TP4ECL\",\r\n        \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n        \"cedula\": 1000000000,\r\n        \"genero\": \"masculino\",\r\n        \"carrera\": \"Ingeniería civíl\",\r\n        \"eventos\": []\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Obtener un participante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/participantes/{{participante_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes",
						"{{participante_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un participante",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"url\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": \"0000000001\",\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería civíl\",\r\n    \"eventos\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes/{{participante_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes",
								"{{participante_id_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": 10000000,\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería civíl\",\r\n    \"eventos\": []\r\n}"
				}
			]
		},
		{
			"name": "Obtener un participante que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Participante with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/participantes/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un participante que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:01:09\",\r\n        \"message\": \"Participante with the given id was not found\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"05-05-2024 05:00:00\",\r\n        \"message\": \"Participante with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Editar un participante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": 1000000000,\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería de Sistemas\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/participantes/{{participante_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes",
						"{{participante_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Editar un participante",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": \"1000000000\",\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería de Sistemas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes/{{participante_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes",
								"{{participante_id_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": 1000000000,\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería de Sistemas\"\r\n}"
				}
			]
		},
		{
			"name": "Editar un participante que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Participante with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": 1000000000,\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería de Sistemas\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/participantes/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Editar un participante que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:01:09\",\r\n        \"message\": \"Participante with the given id was not found\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"05-05-2024 05:00:00\",\r\n        \"message\": \"Participante with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Borrar un participante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/participantes/{{participante_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes",
						"{{participante_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un participante",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes/{{participante_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes",
								"{{participante_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un participante que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Participante with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/participantes/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un participante que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/participantes/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"05-05-2024 05:00:00\",\r\n        \"message\": \"Participante with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Crear un participante con cédula no válida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Cédula is not valid.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Andres Lopez\", \r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": 0,\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería civíl\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/participantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"participantes"
					]
				}
			},
			"response": [
				{
					"name": "Crear un participante con cédula no válida",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Andres Lopez\",\r\n    \"foto\": \"http://bit.ly/3TP4ECL\",\r\n    \"correoElectronico\": \"a.lopez1@uniandes.edu.co\",\r\n    \"cedula\": 0,\r\n    \"genero\": \"masculino\",\r\n    \"carrera\": \"Ingeniería civíl\",\r\n    \"fecha\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participantes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participantes"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"PRECONDITION_FAILED\",\r\n        \"timestamp\": \"29-09-2024 09:51:04\",\r\n        \"message\": \"Cédula is not valid.\"\r\n    }\r\n}"
				}
			]
		}
	]
}